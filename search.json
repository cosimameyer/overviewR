[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"/LICENSE.html","id":"0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"/LICENSE.html","id":"1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"/LICENSE.html","id":"2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"/LICENSE.html","id":"3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"/LICENSE.html","id":"4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"/LICENSE.html","id":"5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"/LICENSE.html","id":"6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"/LICENSE.html","id":"7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"/LICENSE.html","id":"8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"/LICENSE.html","id":"9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"/LICENSE.html","id":"10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"/LICENSE.html","id":"11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"/LICENSE.html","id":"12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"/LICENSE.html","id":"13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"/LICENSE.html","id":"14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"/LICENSE.html","id":"15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"/LICENSE.html","id":"16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"/LICENSE.html","id":"17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) 2020 Cosima Meyer; Dennis Hammerschmidt  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. overviewR Copyright (C) 2020 Cosima Meyer; Dennis Hammerschmidt This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"/articles/getting-started.html","id":"what-is-overviewr","dir":"Articles","previous_headings":"","what":"What is overviewR?","title":"Getting started","text":"overviewR small yet powerful package helps get overview – hence, name – data particular emphasis extent distinct units observation covered entire time frame data set.","code":""},{"path":"/articles/getting-started.html","id":"how-can-you-install-it","dir":"Articles","previous_headings":"","what":"How can you install it?","title":"Getting started","text":"stable version overviewR can directly accessed CRAN: install latest development version overviewR directly GitHub use:","code":"install.packages(\"overviewR\", force = TRUE) library(devtools) devtools::install_github(\"cosimameyer/overviewR\")"},{"path":"/articles/getting-started.html","id":"why-did-we-build-it","dir":"Articles","previous_headings":"","what":"Why did we build it?","title":"Getting started","text":"(large) data set many different observations long period, becomes increasingly difficult identify unique observation exact coverage data. particular, observations included entire time span data – either entered later, dropped earlier gaps – can become difficult spot potential problems data’s time scope. overviewR allows quickly get glimpse data distribution observations time. ability produce data.frame objects LaTeX/.tex outputs, can used practitioners academics alike.","code":""},{"path":"/articles/getting-started.html","id":"how-can-it-be-used","dir":"Articles","previous_headings":"","what":"How can it be used?","title":"Getting started","text":"overviewR can used everyone works data time--scope characteristics. , data contains different units observation specific period benefit overviewR. get quick overview units – think countries, companies, test persons, etc. – present missing given time span – think years, months, days, minutes, etc. – overviewR provides easy intuitive insight set-data. Consider data set covers countries past 50 years. countries existed throughout entire period – dissolved, others newly founded yet others, data might available entire period. starting analysis, helpful get overview countries included entire time span also see countries present points time. words, missing data certain countries different points time? get quick intuitive overview data, overviewR provides currently following basic functions: overview_tab generates basic table lists unique units observation (e.g., countries) aggregates time frame unit present data set. means also takes account gaps data set, e.g., – whatever reason – data available country years within time frame overview_crosstab generates similar table allows separate overview table using two conditions. instance, want know time points countries present data also countries can considered high low GDP can categorized small large population size. , overview_crosstab used. overview_latex takes table – either generated overview_tab overview_crosstab turns LaTeX output. even allows save LaTeX output ready--use .tex file. overview_plot visualizes time scope conditions data ggplot plot. scope object data (e.g., countries) y-axis, plots time coverage (x-axis) horizontal line time points data. helps spot gaps data specific scope objects simply creates graphical display time scope conditions can good companion presentation slides appendices. overview_crossplot alternative visualize cross table (way present results overview_crosstab) overview_heat visualizes coverage time scope combination dataset heat map style ggplot. cell heat map colored based coverage scope object given time point. Additionally, displays either total number cases covered relative percentage plain text. helps spot missing information even nuanced. instance, monthly data set countries scope object, illustrates percentage covered months data country-year combination. overview_na graphically illustrates total number NAs across variables data set horizontal bar plot. Similar plot objects, overview_na returns ggplot object can modified adjusted accordingly. overview_overlap provides overview overlap two data sets","code":""},{"path":"/articles/getting-started.html","id":"overview-of-functional-add-ons","dir":"Articles","previous_headings":"","what":"Overview of functional add-ons","title":"Getting started","text":"also CheatSheet available showcases functions overviewR.","code":""},{"path":"/articles/getting-started.html","id":"get-involved","dir":"Articles","previous_headings":"","what":"Get involved!","title":"Getting started","text":"used overviewR project? Let us know! can either e-mail us use pull-request template populate/fill following information: feature project !","code":"**PROJECT TITLE**: --SHORT DESCRIPTION HOW YOU USED OVERVIEWR-- [*LINK TO YOUR WEBSITE*](https://LINK-TO-YOUR-WEBSITE)"},{"path":[]},{"path":"/articles/overviewR_vignette.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"overviewR: Easily Extracting Information About Your Data","text":"stable version overviewR can directly accessed CRAN: install latest development version overviewR directly GitHub use:","code":"install.packages(\"overviewR\", force = TRUE) library(devtools) devtools::install_github(\"cosimameyer/overviewR\")"},{"path":[]},{"path":"/articles/overviewR_vignette.html","id":"overview_tab","dir":"Articles","previous_headings":"Tabular overview","what":"overview_tab","title":"overviewR: Easily Extracting Information About Your Data","text":"First, load package. following examples use toy data set (toydata) comes package. data contains artificially generated information cross-sectional format 5 countries, covering period 1990-1999. 264 observations 5 countries (Angola, Benin, France, Rwanda, UK) stored ccode variable, time period 1990 1999 (year) additional information month (month). Additionally, two artificially generated fake variables GDP (gdp) population size (population) included illustrate conditions. following functions work best data sets id-time-structure, case toydata corresponds country-year ccode year. data set format yet, consider using pivot_wider() pivot_longer() get format. Generate general overview data set using time scope conditions overview_tab. resulting data frame collapses time condition id taking account potential gaps time frame. Note column name time frame set default time_frame internally generated using overview_tab.","code":"library(overviewR) data(toydata) head(toydata) #>   ccode year month      gdp population day #> 1   RWA 1990   Jan 24180.77  14969.988   1 #> 2   RWA 1990   Jan 23650.53  11791.464   2 #> 3   RWA 1990   Jan 21860.14  30047.979   3 #> 4   RWA 1990   Jan 20801.06  19853.556   4 #> 5   RWA 1990   Jan 18702.84   5148.118   5 #> 6   RWA 1990   Jan 30272.37  48625.140   6 output_table <- overview_tab(dat = toydata, id = ccode, time = year) output_table # ccode   time_frame # RWA       1990 - 1995 # AGO       1990 - 1992 # BEN       1995 - 1999 # GBR       1991, 1993, 1995, 1997, 1999 # FRA       1993, 1996, 1999"},{"path":"/articles/overviewR_vignette.html","id":"multiple-time-arguments","dir":"Articles","previous_headings":"Tabular overview > overview_tab","what":"Multiple time arguments","title":"overviewR: Easily Extracting Information About Your Data","text":"overviewR version 0.0.7 can also use multiple time objects overview_tab. can now pass list containing multiple time variables following format: time = list(year = NULL, month = NULL, day = NULL). resulting data frame collapses time condition id taking account potential gaps time frame. Note column name time frame set default time_frame internally generated using overview_tab. output resembles something like :","code":"output_table_complex <- overview_tab(dat = toydata, id = ccode,                                       time = list(year = toydata$year,                                                  month = toydata$month,                                                   day = toydata$day),                                       complex_date = TRUE) output_table_complex ccode time_frame                                                                                                      # AGO   1990-01-01, 1990-02-02, 1990-03-03, 1990-04-04, 1990-05-05, 1990-06-06, ... # BEN   1995-01-01, 1995-02-02, 1995-03-03, 1995-04-04, 1995-05-05, 1995-06-06, ... # FRA   1993-01-01, 1993-02-02, 1993-03-03, 1993-04-04, 1993-05-05, 1993-06-06, ... # GBR   1991-01-01, 1991-02-02, 1991-03-03, 1991-04-04, 1991-05-05, 1991-06-06, ... # RWA   1990-01-01 - 1990-01-12, 1991-01-01 - 1991-01-12, 1992-01-01 - 1992-01-12, 1993-01-01 - 1993-01-12, 1994-01-01"},{"path":"/articles/overviewR_vignette.html","id":"overview_crosstab","dir":"Articles","previous_headings":"Tabular overview","what":"overview_crosstab","title":"overviewR: Easily Extracting Information About Your Data","text":"generate cross table divides data based two conditions, instance GDP population size, overview_crosstab can used. threshold1 threshold2 thereby indicate cut point two conditions (cond1 cond2), respectively. data frame output looks follows: Note, data set used multiple observations id-time unit, function automatically aggregates data set using mean condition 1 (cond1) condition 2 (cond2).","code":"output_crosstab <- overview_crosstab(   dat = toydata,   cond1 = gdp,   cond2 = population,   threshold1 = 25000,   threshold2 = 27000,   id = ccode,   time = year ) #   part1                                      part2 # 1 AGO (1990, 1992), FRA (1993), GBR (1997)   BEN (1996, 1999), FRA (1999), GBR (1993), RWA (1992, 1994) # 2 BEN (1997), RWA (1990)                     AGO (1991), BEN (1995, 1998), FRA (1996), GBR (1991, 1995, 1999), RWA (1991, 1993, 1995)"},{"path":"/articles/overviewR_vignette.html","id":"overview_latex","dir":"Articles","previous_headings":"Tabular overview","what":"overview_latex","title":"overviewR: Easily Extracting Information About Your Data","text":"overviewR v 0.0.11.999 introduced overview_latex instead overview_print generate easily usable LaTeX output generated overview_tab overview_crosstab objects, overviewR offers function overview_latex. following illustrate using output_table object overview_tab. LaTeX output  default already provides title (“Time scope sample”) can modified argument title. holds column names (“Sample” “Time frame” set default can modified shown ). LaTeX output  function can also used outputs overview_crosstab function using argument crosstab = TRUE. also options label respective conditions (cond1 cond2). Note correspond conditions (cond1 cond2) specified overview_crosstab function. LaTeX output  overview_latex allows specifications font size label. save_out = TRUE function exports output .tex file stores device.","code":"overview_latex(obj = output_table) % Overview table generated in R version 4.0.0 (2020-04-24) using overviewR  % Table created on 2020-06-21 \\begin{table}[ht]   \\centering   \\caption{Time and scope of the sample}   \\begin{tabular}{ll}   \\hline  Sample & Time frame \\\\  \\hline   RWA & 1990 - 1995 \\\\   AGO & 1990 - 1992 \\\\   BEN & 1995 - 1999 \\\\   GBR & 1991, 1993, 1995, 1997, 1999 \\\\   FRA & 1993, 1996, 1999 \\\\   \\hline   \\end{tabular}   \\end{table} overview_latex(   obj = output_table,   id = \"Countries\",   time = \"Years\",   title = \"Cool new title for our awesome table\" ) % Overview table generated in R version 4.0.0 (2020-04-24) using overviewR  % Table created on 2020-06-21 \\begin{table}[ht]   \\centering   \\caption{Cool new title for our awesome table}   \\begin{tabular}{ll}   \\hline  Countries & Years \\\\  \\hline   RWA & 1990 - 1995 \\\\   AGO & 1990 - 1992 \\\\   BEN & 1995 - 1999 \\\\   GBR & 1991, 1993, 1995, 1997, 1999 \\\\   FRA & 1993, 1996, 1999 \\\\   \\hline   \\end{tabular}   \\end{table} overview_latex(   obj = output_crosstab,   title = \"Cross table of the sample\",   crosstab = TRUE,   cond1 = \"GDP\",   cond2 = \"Population\" ) % Overview table generated in R version 4.0.0 (2020-04-24) using overviewR  % Table created on 2020-06-21 % Please add the following packages to your document preamble:  % \\usepackage{multirow}  % \\usepackage{tabularx}  % \\newcolumntype{b}{X}  % \\newcolumntype{s}{>{\\hsize=.5\\hsize}X}  \\begin{table}[ht]  \\caption{Cross table of the sample}   \\begin{tabularx}{\\textwidth}{ssbb}  \\hline & & \\multicolumn{2}{c}{\\textbf{GDP}} \\\\   & & \\textbf{Fulfilled} & \\textbf{Not fulfilled} \\\\   \\hline \\\\   \\multirow{2}{*}{\\textbf{Population}} & \\textbf{Fulfilled} &   AGO (1990, 1992), FRA (1993), GBR (1997) & BEN (1996, 1999), FRA (1999), GBR (1993), RWA (1992, 1994)\\\\    \\\\ \\hline \\\\   & \\textbf{Not fulfilled} &  BEN (1997), RWA (1990) & AGO (1991), BEN (1995, 1998), FRA (1996), GBR (1991, 1995, 1999), RWA (1991, 1993, 1995)\\\\  \\hline \\\\   \\end{tabularx}   \\end{table} overview_latex(obj = output_table,                fontsize = \"scriptsize\",                label = \"tab:overview\") overview_latex(   obj = output_table,   save_out = TRUE,   file_path = \"SET-YOUR-PATH/output.tex\" )"},{"path":[]},{"path":"/articles/overviewR_vignette.html","id":"overview_plot","dir":"Articles","previous_headings":"Visual overview","what":"overview_plot","title":"overviewR: Easily Extracting Information About Your Data","text":"addition tables, overviewR also provides plots illustrate structure data. overview_plot illustrates information generated overview_table ggplot graphic. scope objects (e.g., countries) listed y-axis horizontal lines indicate coverage across entire time frame data (x-axis). helps spot gaps data specific scope objects outlines time point occur.  results sorted alphabetically default. order can also reversed setting asc FALSE.  also option color time lines conditionally. , introduce dummy variable indicates whether year 1995 . use dummy color time lines using color argument.  development version also allows change dot size using dot_size argument. default “2”.  want change color plot, follow ggplot2’s layering logic add new layer .","code":"data(toydata) overview_plot(dat = toydata, id = ccode, time = year) overview_plot(   dat = toydata,   id = ccode,   time = year,   asc = FALSE ) library(overviewR) # Easily Extracting Information About Your Data library(magrittr) # A Forward-Pipe Operator for R  # Code whether a year was before 1995 toydata <- toydata %>%   dplyr::mutate(before = ifelse(year < 1995, 1, 0))  # Plot using the `color` argument overview_plot(   dat = toydata,   id = ccode,   time = year,   color = before ) # Plot using the `color` argument overview_plot(   dat = toydata,   id = ccode,   time = year,   dot_size = 5 ) library(ggplot2)  overview_plot(   dat = toydata,   id = ccode,   time = year ) + ggplot2::scale_color_brewer(palette=\"Dark2\")"},{"path":"/articles/overviewR_vignette.html","id":"overview_crossplot","dir":"Articles","previous_headings":"Visual overview","what":"overview_crossplot","title":"overviewR: Easily Extracting Information About Your Data","text":"visualize also cross table, overview_crossplot job.","code":"overview_crossplot(   toydata,   id = ccode,   time = year,   cond1 = gdp,   cond2 = population,   threshold1 = 25000,   threshold2 = 27000,   color = TRUE,   label = TRUE )"},{"path":"/articles/overviewR_vignette.html","id":"overview_heat","dir":"Articles","previous_headings":"Visual overview","what":"overview_heat","title":"overviewR: Easily Extracting Information About Your Data","text":"overview_heat takes closer look time scope conditions visualizing data coverage time scope combination ggplot heat map. function best explained using example. Suppose dataset monthly data different countries want know data available country every month. overview_heat intuitively plotting heat map cell indicates coverage specific combination time scope (e,g., country-year). illustrated , darker cell , coverage . plot also indicates relative absolute coverage cell. instance, Angola (“AGO”) 1991 shows coverage 75%. means potential 12 months coverage (12 months one year), 9 covered. purpose, first artificially reduced toydata.","code":"toydata_red <- toydata[-sample(seq_len(nrow(toydata)), 64), ] overview_heat(toydata_red,               ccode,               year,               perc = TRUE,               exp_total = 12)"},{"path":"/articles/overviewR_vignette.html","id":"overview_na","dir":"Articles","previous_headings":"Visual overview","what":"overview_na","title":"overviewR: Easily Extracting Information About Your Data","text":"overview_na simple function provides information content variables data, time scope conditions. returns horizontal ggplot bar plot indicates amount missing data (NAs) variable (y-axis). can choose whether display relative amount NAs variable percentage (default) total number NAs. purpose, first artificially reduced toydata.","code":"toydata_with_na <- toydata %>%   dplyr::mutate(     year = ifelse(year < 1992, NA, year),     month = ifelse(month %in% c(\"Jan\", \"Jun\", \"Aug\"), NA, month),     gdp = ifelse(gdp < 20000, NA, gdp)   ) overview_na(toydata_with_na) overview_na(toydata_with_na, perc = FALSE)"},{"path":"/articles/overviewR_vignette.html","id":"overview_overlap","dir":"Articles","previous_headings":"Visual overview","what":"overview_overlap","title":"overviewR: Easily Extracting Information About Your Data","text":"function allows compare two data sets. currently working extended version allows comparing >2 data sets. current development stage, function works follows:  Venn diagram","code":"library(dplyr)  # Subset one data set for comparison toydata2 <- toydata %>% dplyr::filter(year > 1992)  overview_overlap(   dat1 = toydata,   dat2 = toydata2,   dat1_id = ccode,   dat2_id = ccode,   plot_type = \"bar\" # This is the default ) #> Joining with `by = join_by(ccode)` #> Warning: Removed 1 rows containing missing values (`geom_bar()`). overview_overlap(   dat1 = toydata,   dat2 = toydata2,   dat1_id = ccode,   dat2_id = ccode,   plot_type = \"venn\" )"},{"path":"/articles/overviewR_vignette.html","id":"customizing-plots-ggplot2","dir":"Articles","previous_headings":"Visual overview","what":"Customizing plots: ggplot2","title":"overviewR: Easily Extracting Information About Your Data","text":"plot functions fully ggplot2 based. theme pre-defined, can easily overwritten. classical ggplot2 theme alternative","code":"library(ggplot2) # Create Elegant Data Visualisations                   # Using the Grammar of Graphics  overview_na(toydata_with_na) +   ggplot2::theme_minimal()"},{"path":[]},{"path":"/articles/overviewR_vignette.html","id":"workflow-tidyverse","dir":"Articles","previous_headings":"Compatibilities with other packages","what":"Workflow: tidyverse","title":"overviewR: Easily Extracting Information About Your Data","text":"functions easily accessible using common tidyverse workflow. just three examples – possibilities endless. Using filter function  Using mutate generate meaningful country names  Using different overviewR functions generate workflow","code":"library(dplyr) # A Grammar of Data Manipulation # A Grammar of Data Manipulation  toydata_with_na %>%   dplyr::filter(year > 1993) %>%   overview_na() library(countrycode) # Convert Country Names and Country Codes library(dplyr) # A Grammar of Data Manipulation # A Grammar of Data Manipulation  toydata %>%   # Transform the country code (ISO3 character code) into a country name using   # the `countrycode` package   dplyr::mutate(country =                   countrycode::countrycode(ccode, \"iso3c\", \"country.name\")) %>%   overview_plot(id = country, time = year) # Produces a printable LaTeX output toydata %>%   overview_tab(id = ccode, time = year) %>%   overview_latex() % Overview table generated in R version 4.0.2 (2020-06-22) using overviewR  % Table created on 2020-12-30 \\begin{table}[ht]   \\centering   \\caption{Time and scope of the sample}  \\label{tab:tab1}   \\begin{tabular}{ll}   \\hline  Sample & Time frame \\\\  \\hline   AGO & 1990 - 1992 \\\\   BEN & 1995 - 1999 \\\\   FRA & 1993, 1996, 1999 \\\\   GBR & 1991, 1993, 1995, 1997, 1999 \\\\   RWA & 1990 - 1995 \\\\   \\hline   \\end{tabular}   \\end{table}"},{"path":"/articles/overviewR_vignette.html","id":"presenting-tables-flextable-xtable-and-kable","dir":"Articles","previous_headings":"Compatibilities with other packages","what":"Presenting tables: flextable, xtable, and kable","title":"overviewR: Easily Extracting Information About Your Data","text":"outputs overview_tab overview_crosstab also compatible functions xtable, flextable, kable knitr. Two examples shown : classical ggplot2 theme alternative","code":"library(flextable) # not installed on this machine table_output <- qflextable(output_table) table_output <-   set_header_labels(table_output,                     ccode = \"Countries\",                     time_frame = \"Time frame\") set_table_properties(table_output,                      width = .4,                      layout = \"autofit\") library(knitr) # A General-Purpose Package for Dynamic Report Generation in R knitr::kable(output_table) library(ggplot2) # Create Elegant Data Visualisations Using the # Grammar of Graphics  overview_na(toydata_with_na) +   ggplot2::theme_minimal()"},{"path":"/articles/overviewR_vignette.html","id":"extensions","dir":"Articles","previous_headings":"Compatibilities with other packages","what":"Extensions","title":"overviewR: Easily Extracting Information About Your Data","text":"wish compare two data sets using overview_tab, (yet) implemented overviewR currently workaround. look output, see exactly wanted : overview_latex handle object (yet), use xtable instead gives us LaTeX output.","code":"library(overviewR) library(dplyr) library(xtable)  # Load data data(toydata)  # Restrict the data so that we have something to compare :-) toydata_res <- toydata %>%   dplyr::filter(year > 1992)  # Generate two overview_tab objects dat1 <- overview_tab(toydata, id = ccode, time = year) dat2 <- overview_tab(toydata_res, id = ccode, time = year)  # And now we use full_join to combine both dat_full <- dat1 %>%   dplyr::full_join(dat2, by = \"ccode\") %>%   dplyr::rename(time_dat1 = time_frame.x,                 time_dat2 = time_frame.y) head(dat_full) #> # A tibble: 5 x 3 #> # Groups:   ccode [5] #>   ccode time_dat1                    time_dat2              #>   <chr> <chr>                        <chr>                  #> 1 AGO   1990 - 1992                  <NA>                   #> 2 BEN   1995 - 1999                  1995 - 1999            #> 3 FRA   1993, 1996, 1999             1993, 1996, 1999       #> 4 GBR   1991, 1993, 1995, 1997, 1999 1993, 1995, 1997, 1999 #> 5 RWA   1990 - 1995                  1993 - 1995 print(xtable(dat_full), include.rownames = FALSE) % latex table generated in R 4.0.2 by xtable 1.8-4 package % Tue Feb 16 18:20:51 2021 \\begin{table}[ht] \\centering \\begin{tabular}{lll}   \\hline ccode & time\\_dat1 & time\\_dat2 \\\\    \\hline AGO & 1990 - 1992 &  \\\\    BEN & 1995 - 1999 & 1995 - 1999 \\\\    FRA & 1993, 1996, 1999 & 1993, 1996, 1999 \\\\    GBR & 1991, 1993, 1995, 1997, 1999 & 1993, 1995, 1997, 1999 \\\\    RWA & 1990 - 1995 & 1993 - 1995 \\\\     \\hline \\end{tabular} \\end{table}"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Cosima Meyer. Maintainer, author. Dennis Hammerschmidt. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Meyer C, Hammerschmidt D (2023). overviewR: Easily Extracting Information Data. R package version 0.0.12, https://github.com/cosimameyer/overviewR.","code":"@Manual{,   title = {overviewR: Easily Extracting Information About Your Data},   author = {Cosima Meyer and Dennis Hammerschmidt},   year = {2023},   note = {R package version 0.0.12},   url = {https://github.com/cosimameyer/overviewR}, }"},{"path":[]},{"path":"/index.html","id":"-what-is-overviewr","dir":"","previous_headings":"","what":"What is overviewR?","title":"Easily Extracting Information About Your Data","text":"overviewR small yet powerful package helps get overview – hence, name – data particular emphasis extent distinct units observation covered entire time frame data set.","code":""},{"path":"/index.html","id":"-how-can-you-install-it","dir":"","previous_headings":"","what":"How can you install it?","title":"Easily Extracting Information About Your Data","text":"stable version overviewR can directly accessed CRAN: install latest development version overviewR directly GitHub use:","code":"install.packages(\"overviewR\", force = TRUE) library(devtools) # Tools to Make Developing R Packages Easier # Tools to Make Developing R Packages Easier devtools::install_github(\"cosimameyer/overviewR\")"},{"path":"/index.html","id":"-why-did-we-build-it","dir":"","previous_headings":"","what":"Why did we build it?","title":"Easily Extracting Information About Your Data","text":"(large) data set many different observations long period, becomes increasingly difficult identify unique observation exact coverage data. particular, observations included entire time span data – either entered later, dropped earlier gaps – can become difficult spot potential problems data’s time scope. overviewR allows quickly get glimpse data distribution observations time. ability produce data.frame objects LaTeX/.tex outputs, can used practitioners academics alike.","code":""},{"path":"/index.html","id":"-how-can-it-be-used","dir":"","previous_headings":"","what":"How can it be used?","title":"Easily Extracting Information About Your Data","text":"overviewR can used everyone works data time--scope characteristics. , data contains different units observation specific period benefit overviewR. get quick overview units – think countries, companies, test persons, etc. – present missing given time span – think years, months, days, minutes, etc. – overviewR provides easy intuitive insight set-data. Consider data set covers countries past 50 years. countries existed throughout entire period – dissolved, others newly founded yet others, data might available entire period. starting analysis, helpful get overview countries included entire time span also see countries present points time. words, missing data certain countries different points time? get quick intuitive overview data, overviewR provides currently following basic functions: overview_tab generates basic table lists unique units observation (e.g., countries) aggregates time frame unit present data set. means also takes account gaps data set, e.g., – whatever reason – data available country years within time frame overview_crosstab generates similar table allows separate overview table using two conditions. instance, want know time points countries present data also countries can considered high low GDP can categorized small large population size. , overview_crosstab used. overview_print takes table – either generated overview_tab overview_crosstab turns LaTeX output. even allows save LaTeX output ready--use .tex file. overview_plot visualizes time scope conditions data ggplot plot. scope object data (e.g., countries) y-axis, plots time coverage (x-axis) horizontal line time points data. helps spot gaps data specific scope objects simply creates graphical display time scope conditions can good companion presentation slides appendices. overview_crossplot alternative visualize cross table (way present results overview_crosstab) overview_heat visualizes coverage time scope combination dataset heat map style ggplot. cell heat map colored based coverage scope object given time point. Additionally, displays either total number cases covered relative percentage plain text. helps spot missing information even nuanced. instance, monthly data set countries scope object, illustrates percentage covered months data country-year combination. overview_na graphically illustrates total number NAs across variables data set horizontal bar plot. Similar plot objects, overview_na returns ggplot object can modified adjusted accordingly. overview_overlap plots overlap two data sets. also CheatSheet available showcases functions overviewR.","code":""},{"path":"/index.html","id":"-get-involved","dir":"","previous_headings":"","what":"Get involved!","title":"Easily Extracting Information About Your Data","text":"used overviewR project? Let us know! can either e-mail us use pull-request template populate/fill following information: feature project !","code":"**PROJECT TITLE**: --SHORT DESCRIPTION HOW YOU USED OVERVIEWR-- [*LINK TO YOUR WEBSITE*](https://LINK-TO-YOUR-WEBSITE)"},{"path":[]},{"path":"/reference/calculate_share_non_row_wise.html","id":null,"dir":"Reference","previous_headings":"","what":"calculate_share_non_row_wise — calculate_share_non_row_wise","title":"calculate_share_non_row_wise — calculate_share_non_row_wise","text":"Function used `overview_na` calculate column-wise share NA","code":""},{"path":"/reference/calculate_share_non_row_wise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calculate_share_non_row_wise — calculate_share_non_row_wise","text":"","code":"calculate_share_non_row_wise(dat = NULL)"},{"path":"/reference/calculate_share_non_row_wise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calculate_share_non_row_wise — calculate_share_non_row_wise","text":"dat Data frame","code":""},{"path":"/reference/calculate_share_non_row_wise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"calculate_share_non_row_wise — calculate_share_non_row_wise","text":"function returns data set information     column-wise NA share","code":""},{"path":"/reference/calculate_share_row_wise.html","id":null,"dir":"Reference","previous_headings":"","what":"calculate_share_row_wise — calculate_share_row_wise","title":"calculate_share_row_wise — calculate_share_row_wise","text":"Function used `overview_na` calculate share NA row-wise","code":""},{"path":"/reference/calculate_share_row_wise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calculate_share_row_wise — calculate_share_row_wise","text":"","code":"calculate_share_row_wise(dat = NULL)"},{"path":"/reference/calculate_share_row_wise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calculate_share_row_wise — calculate_share_row_wise","text":"dat Data frame","code":""},{"path":"/reference/calculate_share_row_wise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"calculate_share_row_wise — calculate_share_row_wise","text":"function returns data set information     row-wise NA share","code":""},{"path":"/reference/dot-overview_heat.html","id":null,"dir":"Reference","previous_headings":"","what":".overview_tab — .overview_heat","title":".overview_tab — .overview_heat","text":"Internal function calculates `overview_tab` data.table objects","code":""},{"path":"/reference/dot-overview_heat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":".overview_tab — .overview_heat","text":"","code":".overview_heat(   dat = NULL,   id = NULL,   time = NULL,   label = FALSE,   perc = FALSE,   col_low = NULL,   col_high = NULL,   xaxis = NULL,   yaxis = NULL,   theme_plot = NULL,   exp_total = NULL,   col_names = NULL )"},{"path":"/reference/dot-overview_heat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":".overview_tab — .overview_heat","text":"dat data set id scope (e.g., country codes individual IDs). axis ordered ascending order default. time time (e.g., time periods given years, months, ...) label TRUE (default), total number observations/percentages observations displayed. FALSE, returns labels. perc FALSE (default) plot returns total number observations per time-scope-unit. TRUE, returns number observations per time-scope-unit percentage col_low Hex color code lowest value (default \"#dceaf2\") col_high Hex color code lowest value (default \"#2A5773\") xaxis Label x axis (\"Time frame\" default) yaxis Label y axis (\"Sample\" default) theme_plot Previously generated theme exp_total Expected total number observations (.e. maximum) time unit. col_names column names (containing id time)","code":""},{"path":"/reference/dot-overview_heat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":".overview_tab — .overview_heat","text":"ggplot","code":""},{"path":"/reference/dot-overview_tab.html","id":null,"dir":"Reference","previous_headings":"","what":".overview_tab — .overview_tab","title":".overview_tab — .overview_tab","text":"Internal function calculates `overview_tab` data.table objects","code":""},{"path":"/reference/dot-overview_tab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":".overview_tab — .overview_tab","text":"","code":".overview_tab(dat = NULL, id = NULL, time = NULL, col_names = NULL)"},{"path":"/reference/dot-overview_tab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":".overview_tab — .overview_tab","text":"dat data set id Scope (e.g., country codes individual IDs) time Time (e.g., time periods given years, months, ...). three options add date variable: 1) Time can character vector containing **one** time variable, 2) time variable following YYYY-MM-DD format, 3) list containing multiple time variables (`time = list(year = NULL, month = NULL, day = NULL)`). col_names column names (containing id time)","code":""},{"path":"/reference/dot-overview_tab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":".overview_tab — .overview_tab","text":"data.table","code":""},{"path":"/reference/find_int_runs.html","id":null,"dir":"Reference","previous_headings":"","what":"find_int_runs — find_int_runs","title":"find_int_runs — find_int_runs","text":"Function used `overview_tab` find running integers","code":""},{"path":"/reference/find_int_runs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"find_int_runs — find_int_runs","text":"","code":"find_int_runs(run = NULL)"},{"path":"/reference/find_int_runs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"find_int_runs — find_int_runs","text":"run Variable (integer) checked consecutive values","code":""},{"path":"/reference/find_int_runs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"find_int_runs — find_int_runs","text":"function returns data set","code":""},{"path":"/reference/overview_add_na_output.html","id":null,"dir":"Reference","previous_headings":"","what":"overview_add_na_output — overview_add_na_output","title":"overview_add_na_output — overview_add_na_output","text":"Function used `overview_na` generate new data frame     na_count percentage share NAs row","code":""},{"path":"/reference/overview_add_na_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"overview_add_na_output — overview_add_na_output","text":"","code":"overview_add_na_output(dat_result = NULL, dat = NULL)"},{"path":"/reference/overview_add_na_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"overview_add_na_output — overview_add_na_output","text":"dat_result Data.frame `overview_na` dat Data frame","code":""},{"path":"/reference/overview_add_na_output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"overview_add_na_output — overview_add_na_output","text":"function returns data set information     row-wise NA share","code":""},{"path":"/reference/overview_crossplot.html","id":null,"dir":"Reference","previous_headings":"","what":"overview_crossplot — overview_crossplot","title":"overview_crossplot — overview_crossplot","text":"function plots ggplot visualize cross table plot.","code":""},{"path":"/reference/overview_crossplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"overview_crossplot — overview_crossplot","text":"","code":"overview_crossplot(   dat,   id,   time,   cond1,   cond2,   threshold1,   threshold2,   xaxis = \"Condition 1\",   yaxis = \"Condition 2\",   label = FALSE,   color = FALSE,   dot_size = 2,   fontsize = 2.5 )"},{"path":"/reference/overview_crossplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"overview_crossplot — overview_crossplot","text":"dat data set id scope (e.g., country codes individual IDs). id variable contains NAs, included plot. time time (e.g., time periods given years, months, ...) cond1 Variable describes first condition cond2 Variable describes second condition threshold1 threshold cond1 threshold2 threshold cond2 xaxis Label x axis (\"Condition 1\" default) yaxis Label y axis (\"Condition 2\" default) label Label observations. Overlapping labels avoided using 'ggrepel' color Color different observation groups dot_size Option argument defines dot size (default 2) fontsize label TRUE, fontsize arguments allows define text labels (default 2.5)","code":""},{"path":"/reference/overview_crossplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"overview_crossplot — overview_crossplot","text":"ggplot figure presents sample information visually     cross table","code":""},{"path":"/reference/overview_crossplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"overview_crossplot — overview_crossplot","text":"","code":"data(toydata) overview_crossplot(   dat = toydata,   cond1 = gdp,   cond2 = population,   threshold1 = 25000,   threshold2 = 27000,   id = ccode,   time = year )"},{"path":"/reference/overview_crosstab.html","id":null,"dir":"Reference","previous_headings":"","what":"overview_crosstab — overview_crosstab","title":"overview_crosstab — overview_crosstab","text":"Sorts data set conditionally cross table.     can helpful get sense time scope     conditions data set. Note, used data set multiple     observations id-time unit, function automatically aggregates     information using mean.","code":""},{"path":"/reference/overview_crosstab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"overview_crosstab — overview_crosstab","text":"","code":"overview_crosstab(dat, cond1, cond2, threshold1, threshold2, id, time)"},{"path":"/reference/overview_crosstab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"overview_crosstab — overview_crosstab","text":"dat data set object cond1 Variable describes first condition cond2 Variable describes second condition threshold1 threshold cond1 threshold2 threshold cond2 id Scope (e.g., country codes individual IDs) time Time (e.g., time periods given years, months, ...)","code":""},{"path":"/reference/overview_crosstab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"overview_crosstab — overview_crosstab","text":"data frame object contains summary data set can       later converted 'LaTeX' output using overview_latex","code":""},{"path":"/reference/overview_crosstab.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"overview_crosstab — overview_crosstab","text":"","code":"data(toydata) overview_crosstab(   dat = toydata,   cond1 = gdp,   cond2 = population,   threshold1 = 25000,   threshold2 = 27000,   id = ccode,   time = year ) #>                                      part1 #> 1 AGO (1990, 1992), FRA (1993), GBR (1997) #> 2                   BEN (1997), RWA (1990) #>                                                                                      part2 #> 1                               BEN (1996, 1999), FRA (1999), GBR (1993), RWA (1992, 1994) #> 2 AGO (1991), BEN (1995, 1998), FRA (1996), GBR (1991, 1995, 1999), RWA (1991, 1993, 1995)"},{"path":"/reference/overview_heat.html","id":null,"dir":"Reference","previous_headings":"","what":"overview_heat — overview_heat","title":"overview_heat — overview_heat","text":"function plots heat map visualize     coverage time-scope-units data. Options include total     number cases per time-scope-unit relative number percentage.","code":""},{"path":"/reference/overview_heat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"overview_heat — overview_heat","text":"","code":"overview_heat(   dat,   id,   time,   perc = FALSE,   exp_total = NULL,   xaxis = \"Time frame\",   yaxis = \"Sample\",   col_low = \"#dceaf2\",   col_high = \"#2A5773\",   label = TRUE )"},{"path":"/reference/overview_heat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"overview_heat — overview_heat","text":"dat data set id scope (e.g., country codes individual IDs). axis ordered ascending order default. time time (e.g., time periods given years, months, ...) perc FALSE (default) plot returns total number observations per time-scope-unit. TRUE, returns number observations per time-scope-unit percentage exp_total Expected total number observations (.e. maximum) time unit. xaxis Label x axis (\"Time frame\" default) yaxis Label y axis (\"Sample\" default) col_low Hex color code lowest value (default \"#dceaf2\") col_high Hex color code lowest value (default \"#2A5773\") label TRUE (default), total number observations/percentages observations displayed. FALSE, returns labels.","code":""},{"path":"/reference/overview_heat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"overview_heat — overview_heat","text":"ggplot figure presents sample coverage visually","code":""},{"path":"/reference/overview_heat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"overview_heat — overview_heat","text":"","code":"data(toydata) overview_heat(toydata, ccode, year, perc = TRUE, exp_total = 12)"},{"path":"/reference/overview_latex.html","id":null,"dir":"Reference","previous_headings":"","what":"overview_latex — overview_latex","title":"overview_latex — overview_latex","text":"Produces 'LaTeX' output output obtained via    overview_tab overview_crosstab","code":""},{"path":"/reference/overview_latex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"overview_latex — overview_latex","text":"","code":"overview_latex(   obj,   title = \"Time and scope of the sample\",   id = \"Sample\",   time = \"Time frame\",   crosstab = FALSE,   cond1 = \"Condition 1\",   cond2 = \"Condition 2\",   save_out = FALSE,   file_path,   label = \"tab:tab1\",   fontsize,   file,   path )"},{"path":"/reference/overview_latex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"overview_latex — overview_latex","text":"obj Overview object produced overview_tab overview_crosstab title Caption table (default \"Time scope sample\") id name left column (default \"Sample\"), ignored crosstab TRUE time name right column (default (\"Time frame\")), ignored crosstab TRUE crosstab Logical argument, TRUE produces crosstab output, default FALSE cond1 Description first condition (character), ignored crosstab FALSE. correspond input cond1 overview_crosstab cond2 Description second condition (character), ignored crosstab FALSE. correspond input cond2 overview_crosstab save_out Optional argument, exports output table .tex file, default FALSE file_path Specifies path file name (.tex) store output label Specifies label (default \"tab:tab1\") fontsize Specifies font size ('LaTeX' font sizes \"scriptsize\" \"small\" work) file argument deprecated. Please use \"file_path\" instead add full path. path argument deprecated. Please use \"file_path\" instead add full path.","code":""},{"path":"/reference/overview_latex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"overview_latex — overview_latex","text":"'LaTeX' output can either copy-pasted text document     exported directed .tex file","code":""},{"path":"/reference/overview_latex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"overview_latex — overview_latex","text":"","code":"data(toydata)  overview_object <- overview_tab(dat = toydata, id = ccode, time = year) overview_latex(   obj = overview_object,   title = \"Some nice title\",   crosstab = FALSE ) #> % Overview table generated in R version 4.2.2 (2022-10-31) using overviewR  #> % Table created on 2023-02-14 #> \\begin{table}[ht]  #>  \\centering  #>  \\caption{Some nice title}  #> \\label{tab:tab1}  #>  #> \\begin{tabular}{ll}  #>  \\hline  #> Sample & Time frame \\\\ \\hline  #>  AGO & 1990 - 1992 \\\\  #>  BEN & 1995 - 1999 \\\\  #>  FRA & 1993, 1996, 1999 \\\\  #>  GBR & 1991, 1993, 1995, 1997, 1999 \\\\  #>  RWA & 1990 - 1995 \\\\  #>  \\hline  #>  \\end{tabular}  #>  \\end{table}   #' overview_object <- overview_tab(dat = toydata, id = ccode, time = year) overview_latex(   obj = overview_object,   title = \"Some nice title\",   file_path = \"some/path_to/your_output_file.tex\" ) #> % Overview table generated in R version 4.2.2 (2022-10-31) using overviewR  #> % Table created on 2023-02-14 #> \\begin{table}[ht]  #>  \\centering  #>  \\caption{Some nice title}  #> \\label{tab:tab1}  #>  #> \\begin{tabular}{ll}  #>  \\hline  #> Sample & Time frame \\\\ \\hline  #>  AGO & 1990 - 1992 \\\\  #>  BEN & 1995 - 1999 \\\\  #>  FRA & 1993, 1996, 1999 \\\\  #>  GBR & 1991, 1993, 1995, 1997, 1999 \\\\  #>  RWA & 1990 - 1995 \\\\  #>  \\hline  #>  \\end{tabular}  #>  \\end{table}   overview_ct_object <- overview_crosstab(   dat = toydata,   cond1 = gdp,   cond2 = population,   threshold1 = 25000,   threshold2 = 27000,   id = ccode,   time = year ) overview_latex(   obj = overview_ct_object,   title = \"Some nice title for a cross tab\",   crosstab = TRUE,   cond1 = \"Name of first condition\",   cond2 = \"Name of second condition\" ) #> % Overview table generated in R version 4.2.2 (2022-10-31) using overviewR  #> % Table created on 2023-02-14 #> % Please add the following packages to your document preamble:  #> % \\usepackage{multirow}  #> % \\usepackage{tabularx}  #> % \\newcolumntype{b}{X}  #> % \\newcolumntype{s}{>{\\hsize=.5\\hsize}X}  #> \\begin{table}[ht]  #> \\caption{Some nice title for a cross tab}  #> \\label{tab:tab1}  #>  #> \\begin{tabularx}{\\textwidth}{ssbb}  #> \\hline & & \\multicolumn{2}{c}{\\textbf{Name of first condition}} \\\\  #>  & & \\textbf{Fulfilled} & \\textbf{Not fulfilled} \\\\  #>  \\hline \\\\  #>  \\multirow{2}{*}{\\textbf{Name of second condition}} & \\textbf{Fulfilled} &  #>  AGO (1990, 1992), FRA (1993), GBR (1997) & BEN (1996, 1999), FRA (1999), GBR (1993), RWA (1992, 1994)\\\\   #>  \\\\ \\hline \\\\  #>  & \\textbf{Not fulfilled} &  BEN (1997), RWA (1990) & AGO (1991), BEN (1995, 1998), FRA (1996), GBR (1991, 1995, 1999), RWA (1991, 1993, 1995)\\\\  \\hline \\\\  #>  \\end{tabularx}  #>  \\end{table}"},{"path":"/reference/overview_na.html","id":null,"dir":"Reference","previous_headings":"","what":"overview_na — overview_na","title":"overview_na — overview_na","text":"function plots ggplot visualize distribution     NAs across variables data set.","code":""},{"path":"/reference/overview_na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"overview_na — overview_na","text":"","code":"overview_na(   dat,   yaxis = \"Variables\",   perc = TRUE,   row_wise = FALSE,   add = FALSE )"},{"path":"/reference/overview_na.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"overview_na — overview_na","text":"dat data set yaxis Label y axis (\"Variables\" default) perc TRUE (default) plot returns number NAs percentage row_wise TRUE (FALSE default) plot return number NAs per row add TRUE (FALSE default) generates new data frame na_count percentage share NAs row","code":""},{"path":"/reference/overview_na.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"overview_na — overview_na","text":"Depending selection, function returns ggplot figure     presents distribution NAs data set adds information     row-wise NA share","code":""},{"path":"/reference/overview_na.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"overview_na — overview_na","text":"","code":"data(toydata) overview_na(toydata, perc = FALSE)"},{"path":"/reference/overview_overlap.html","id":null,"dir":"Reference","previous_headings":"","what":"overview_overlap — overview_overlap","title":"overview_overlap — overview_overlap","text":"Provides overview overlap two data sets.     Cautionary note: function currently preliminary workable     can capture 2 data sets. working extension     allows compare multiple data sets.","code":""},{"path":"/reference/overview_overlap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"overview_overlap — overview_overlap","text":"","code":"overview_overlap(   dat1,   dat2,   dat1_id,   dat2_id,   dat1_name = \"Data set 1\",   dat2_name = \"Data set 2\",   plot_type = \"bar\" )"},{"path":"/reference/overview_overlap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"overview_overlap — overview_overlap","text":"dat1 first data set object dat2 second data set object dat1_id Scope (e.g., country codes individual IDs) dat1. important ID variables exactly generate perfect match. dat2_id Scope (e.g., country codes individual IDs) dat2. important ID variables exactly generate perfect match. dat1_name Name dat1 (\"Data set 1\" default) dat2_name Name dat2 (\"Data set 2\" default) plot_type Type plot (\"bar\" \"venn\" two options) \"venn\" relies ggvenn function","code":""},{"path":"/reference/overview_overlap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"overview_overlap — overview_overlap","text":"ggplot2 object (bar chart) shows overlap two data sets.","code":""},{"path":"/reference/overview_overlap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"overview_overlap — overview_overlap","text":"","code":"if (FALSE) { data(toydata) toydata2 <- toydata[which(toydata$year > 1992), ] overview_overlap(   dat1 = toydata, dat2 = toydata2, dat1_id = ccode,   dat2_id = ccode ) }"},{"path":"/reference/overview_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"overview_plot — overview_plot","title":"overview_plot — overview_plot","text":"function plots ggplot visualize distribution     scope objects across time frame.","code":""},{"path":"/reference/overview_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"overview_plot — overview_plot","text":"","code":"overview_plot(   dat,   id,   time,   xaxis = \"Time frame\",   yaxis = \"Sample\",   asc = TRUE,   color,   dot_size = 2 )"},{"path":"/reference/overview_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"overview_plot — overview_plot","text":"dat data set id scope (e.g., country codes individual IDs). id variable contains NAs, included plot. time time (e.g., time periods given years, months, ...) xaxis Label x axis (\"Time frame\" default) yaxis Label y axis (\"Sample\" default) asc Sorting y axis ascending order (\"TRUE\" default) color Optional argument defines color dot_size Option argument defines dot size (default 2)","code":""},{"path":"/reference/overview_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"overview_plot — overview_plot","text":"ggplot figure presents sample information visually","code":""},{"path":"/reference/overview_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"overview_plot — overview_plot","text":"","code":"data(toydata) overview_plot(dat = toydata, id = ccode, time = year)"},{"path":"/reference/overview_plot_absolute.html","id":null,"dir":"Reference","previous_headings":"","what":"overview_plot_absolute — overview_plot_absolute","title":"overview_plot_absolute — overview_plot_absolute","text":"Function used `overview_na` plot absolute share NA values","code":""},{"path":"/reference/overview_plot_absolute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"overview_plot_absolute — overview_plot_absolute","text":"","code":"overview_plot_absolute(   dat_result = NULL,   theme_plot = NULL,   yaxis = NULL,   xaxis = NULL )"},{"path":"/reference/overview_plot_absolute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"overview_plot_absolute — overview_plot_absolute","text":"dat_result Data frame theme_plot Theme plot (pre-defined) yaxis Name yaxis xaxis Name xaxix","code":""},{"path":"/reference/overview_plot_absolute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"overview_plot_absolute — overview_plot_absolute","text":"function returns ggplot","code":""},{"path":"/reference/overview_plot_percentage.html","id":null,"dir":"Reference","previous_headings":"","what":"overview_plot_percentage — overview_plot_percentage","title":"overview_plot_percentage — overview_plot_percentage","text":"Function used `overview_na` plot percentage share NA values","code":""},{"path":"/reference/overview_plot_percentage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"overview_plot_percentage — overview_plot_percentage","text":"","code":"overview_plot_percentage(   dat_result = NULL,   theme_plot = NULL,   yaxis = NULL,   xaxis = NULL )"},{"path":"/reference/overview_plot_percentage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"overview_plot_percentage — overview_plot_percentage","text":"dat_result Data frame theme_plot Theme plot (pre-defined) yaxis Name yaxis xaxis Name xaxix","code":""},{"path":"/reference/overview_plot_percentage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"overview_plot_percentage — overview_plot_percentage","text":"function returns ggplot","code":""},{"path":"/reference/overview_tab.html","id":null,"dir":"Reference","previous_headings":"","what":"overview_tab — overview_tab","title":"overview_tab — overview_tab","text":"Provides overview table time scope conditions     data set. data.table object provided, function uses     data.table's syntax perform evaluation","code":""},{"path":"/reference/overview_tab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"overview_tab — overview_tab","text":"","code":"overview_tab(   dat,   id,   time = list(year = NULL, month = NULL, day = NULL),   complex_date = FALSE )"},{"path":"/reference/overview_tab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"overview_tab — overview_tab","text":"dat data frame data table object id Scope (e.g., country codes individual IDs) time Time (e.g., time periods given years, months, ...). three options add date variable: 1) Time can character vector containing **one** time variable, 2) time variable following YYYY-MM-DD format, 3) list containing multiple time variables (`time = list(year = NULL, month = NULL, day = NULL)`). complex_date Boolean argument identifying complex (list-wise) date_time parameter (FALSE default)","code":""},{"path":"/reference/overview_tab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"overview_tab — overview_tab","text":"data frame object contains summary sample     can later converted 'LaTeX' output using overview_latex","code":""},{"path":"/reference/overview_tab.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"overview_tab — overview_tab","text":"","code":"# With version 1 (and also 2):  data(toydata) output_table <- overview_tab(dat = toydata, id = ccode, time = year)  # With version 3: overview_tab(dat = toydata, id = ccode, time = list(   year = toydata$year,   month = toydata$month, day = toydata$day ), complex_date = TRUE) #> # A tibble: 5 × 2 #> # Groups:   ccode [5] #>   ccode time_frame                                                               #>   <chr> <chr>                                                                    #> 1 AGO   1990-01-01, 1990-02-02, 1990-03-03, 1990-04-04, 1990-05-05, 1990-06-06,… #> 2 BEN   1995-01-01, 1995-02-02, 1995-03-03, 1995-04-04, 1995-05-05, 1995-06-06,… #> 3 FRA   1993-01-01, 1993-02-02, 1993-03-03, 1993-04-04, 1993-05-05, 1993-06-06,… #> 4 GBR   1991-01-01, 1991-02-02, 1991-03-03, 1991-04-04, 1991-05-05, 1991-06-06,… #> 5 RWA   1990-01-01 - 1990-01-12, 1991-01-01 - 1991-01-12, 1992-01-01 - 1992-01-…"},{"path":"/reference/overview_tab_df.html","id":null,"dir":"Reference","previous_headings":"","what":"overview_tab_df — overview_tab_df","title":"overview_tab_df — overview_tab_df","text":"Internal function calculates `overview_tab` data.frame objects","code":""},{"path":"/reference/overview_tab_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"overview_tab_df — overview_tab_df","text":"","code":"overview_tab_df(dat2 = NULL, dat = NULL, id = NULL, time = NULL)"},{"path":"/reference/overview_tab_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"overview_tab_df — overview_tab_df","text":"dat2 data set dat data set id Scope (e.g., country codes individual IDs) time Time (e.g., time periods given years, months, ...). three options add date variable: 1) Time can character vector containing **one** time variable, 2) time variable following YYYY-MM-DD format, 3) list containing multiple time variables (`time = list(year = NULL, month = NULL, day = NULL)`).","code":""},{"path":"/reference/overview_tab_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"overview_tab_df — overview_tab_df","text":"data.frame","code":""},{"path":"/reference/overview_tab_dt.html","id":null,"dir":"Reference","previous_headings":"","what":"overview_tab_dt — overview_tab_dt","title":"overview_tab_dt — overview_tab_dt","text":"Internal function calculates `overview_tab` data.table objects","code":""},{"path":"/reference/overview_tab_dt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"overview_tab_dt — overview_tab_dt","text":"","code":"overview_tab_dt(dat = NULL, id = NULL, time = NULL, col_names = NULL)"},{"path":"/reference/overview_tab_dt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"overview_tab_dt — overview_tab_dt","text":"dat data set id Scope (e.g., country codes individual IDs) time Time (e.g., time periods given years, months, ...). three options add date variable: 1) Time can character vector containing **one** time variable, 2) time variable following YYYY-MM-DD format, 3) list containing multiple time variables (`time = list(year = NULL, month = NULL, day = NULL)`). col_names column names (containing id time)","code":""},{"path":"/reference/overview_tab_dt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"overview_tab_dt — overview_tab_dt","text":"data.table","code":""},{"path":"/reference/theme_heat_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"theme_heat_plot — theme_heat_plot","title":"theme_heat_plot — theme_heat_plot","text":"Defines theme `overview_heat` plot function","code":""},{"path":"/reference/theme_heat_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"theme_heat_plot — theme_heat_plot","text":"","code":"theme_heat_plot()"},{"path":"/reference/theme_heat_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"theme_heat_plot — theme_heat_plot","text":"theme `overview_heat` plot","code":""},{"path":"/reference/theme_na_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"theme_na_plot — theme_na_plot","title":"theme_na_plot — theme_na_plot","text":"Defines theme `overview_na` plot function","code":""},{"path":"/reference/theme_na_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"theme_na_plot — theme_na_plot","text":"","code":"theme_na_plot()"},{"path":"/reference/theme_na_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"theme_na_plot — theme_na_plot","text":"theme `overview_na` plot","code":""},{"path":"/reference/toydata.html","id":null,"dir":"Reference","previous_headings":"","what":"Cross-sectional data for countries — toydata","title":"Cross-sectional data for countries — toydata","text":"Small, artificially generated toy data set comes cross-sectional format unit analysis either country-year country-year-month. provides artificial information five countries (Angola, Benin, France, Rwanda, UK) time span 1990 1999 illustrate use package.","code":""},{"path":"/reference/toydata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cross-sectional data for countries — toydata","text":"","code":"data(toydata)"},{"path":"/reference/toydata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Cross-sectional data for countries — toydata","text":"object class \"data.frame\" ccode ISO3 country code (character) countries      sample (Angola, Benin, France, Rwanda, UK) year value 1990 1999 month abbreviation (MMM) month (character) gpd fake value GDP (randomly generated) population fake value population (randomly generated)","code":""},{"path":"/reference/toydata.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Cross-sectional data for countries — toydata","text":"data set artificially created overviewR package.","code":""},{"path":"/reference/toydata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cross-sectional data for countries — toydata","text":"","code":"data(toydata) head(toydata) #>   ccode year month      gdp population day #> 1   RWA 1990   Jan 24180.77  14969.988   1 #> 2   RWA 1990   Jan 23650.53  11791.464   2 #> 3   RWA 1990   Jan 21860.14  30047.979   3 #> 4   RWA 1990   Jan 20801.06  19853.556   4 #> 5   RWA 1990   Jan 18702.84   5148.118   5 #> 6   RWA 1990   Jan 30272.37  48625.140   6"},{"path":"/news/index.html","id":"overviewr-0012","dir":"Changelog","previous_headings":"","what":"overviewR 0.0.12","title":"overviewR 0.0.12","text":"Following issue #24’s excellent suggestion, renamed overview_print overview_latex (old code overview_print still works recommended use overview_latex instead) Following issue #29’s advice, also deprecated single argument file path overview_latex added new argument file_path","code":""},{"path":"/news/index.html","id":"overviewr-0011","dir":"Changelog","previous_headings":"","what":"overviewR 0.0.11","title":"overviewR 0.0.11","text":"CRAN release: 2022-08-06 CRAN resubmission fix bug overview_overlap return correct percentages visualization","code":""},{"path":"/news/index.html","id":"overviewr-0010","dir":"Changelog","previous_headings":"","what":"overviewR 0.0.10","title":"overviewR 0.0.10","text":"CRAN release: 2022-04-15 CRAN resubmission fixed following bugs issues: Internal function returned integer instead date using multiple time options (also updated vignettes) “package code run part checks attempts write user library violates CRAN Policy’s” “Packages write user’s home filespace (including clipboards), anywhere else file system apart R session’s temporary directory (installation location pointed TMPDIR: usage cleaned ).” Increased code coverage units tests 100%","code":""},{"path":"/news/index.html","id":"overviewr-009","dir":"Changelog","previous_headings":"","what":"overviewR 0.0.9","title":"overviewR 0.0.9","text":"CRAN release: 2022-04-12 version adds possibility use multiple time arguments overview_tab also adds extended toydata data.frame (including variables day)","code":""},{"path":"/news/index.html","id":"overviewr-008999","dir":"Changelog","previous_headings":"","what":"overviewR 0.0.8.999","title":"overviewR 0.0.8.999","text":"development version adds possibility use data.table object overview_tab overview_na","code":""},{"path":"/news/index.html","id":"overviewr-0079991","dir":"Changelog","previous_headings":"","what":"overviewR 0.0.7.999.1","title":"overviewR 0.0.7.999.1","text":"Adjustable dot_size (default 2) Option generate row_wise NA values New function compare (moment) two data sets using bar graphs (plot_type = \"bar\") Venn diagrams (plot_type = \"venn\") Fixed small issue can cause problems large (complex) TeX documents","code":""},{"path":"/news/index.html","id":"overviewr-007999","dir":"Changelog","previous_headings":"","what":"overviewR 0.0.7.999","title":"overviewR 0.0.7.999","text":"consecutive years correctly connected ) color argument color parts time lines label add cross-reference label fontsize change font size new function visualizes basically output overview_crosstab NA id variable observation automatically deleted. user receives warning. NA id variable observation automatically deleted. user receives warning.","code":""},{"path":"/news/index.html","id":"overviewr-007","dir":"Changelog","previous_headings":"","what":"overviewR 0.0.7","title":"overviewR 0.0.7","text":"CRAN release: 2020-11-23 CRAN resubmission fixed following bugs: Time line correctly displayed consecutive time variable present two different id variables Loaded package dplyr follow CRAN policies: “Packages use Internet resources fail gracefully informative message resource available changed (give check warning error). CRAN versions packages work current CRAN Bioconductor releases packages depend anticipate recommend development versions packages () repositories.” added following new features: - Added function overview_plot function - Y axis now automatically ordered ascending order - Extended overview_heat function - Y axis now automatically ordered ascending order - Introduced “label” argument overview_heat allows user select whether percentage/total number observations displayed ","code":""},{"path":"/news/index.html","id":"overviewr-006","dir":"Changelog","previous_headings":"","what":"overviewR 0.0.6","title":"overviewR 0.0.6","text":"CRAN release: 2020-08-24 CRAN resubmission overview_plot overview_na overview_heat Fixed two bugs overview_plot overview_tab returned erroneous results non-sorted data","code":""},{"path":"/news/index.html","id":"overviewr-005900","dir":"Changelog","previous_headings":"","what":"overviewR 0.0.5.900","title":"overviewR 0.0.5.900","text":"overview_plot overview_na overview_heat","code":""},{"path":"/news/index.html","id":"overviewr-004","dir":"Changelog","previous_headings":"","what":"overviewR 0.0.4","title":"overviewR 0.0.4","text":"CRAN release: 2020-06-30 CRAN release adjustments new CRAN comments avoid writing user’s home file space","code":""},{"path":"/news/index.html","id":"overviewr-003","dir":"Changelog","previous_headings":"","what":"overviewR 0.0.3","title":"overviewR 0.0.3","text":"Adjusted examples tests based CRAN’s standards","code":""},{"path":"/news/index.html","id":"overviewr-002","dir":"Changelog","previous_headings":"","what":"overviewR 0.0.2","title":"overviewR 0.0.2","text":"Bug fixes overview_tab affected overview_crosstab","code":""},{"path":[]}]
